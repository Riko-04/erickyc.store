replicas: 1

image: "docker.elastic.co/logstash/logstash"
imageTag: "8.5.1"
imagePullPolicy: "IfNotPresent"

logstashJavaOpts: "-Xmx512m -Xms512m"

resources:
  requests:
    cpu: "100m"
    memory: "156Mi"
  limits:
    cpu: "300m"
    memory: "250Mi"

volumeClaimTemplate:
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 3Gi

logstashPipeline:
  logstash.conf: |
    input {
      beats {
        port => 5044
      }
    }
    output {
      elasticsearch {
        hosts => ["http://elasticsearch-master:9200"]
        user => "elastic"
        password => "elastic"
      }
    }

# Not necessary, since I've hard-coded the credentials
# extraEnvs:
#   - name: ES_USERNAME
#     valueFrom:
#       secretKeyRef:
#         name: elasticsearch-master-credentials
#         key: username
#   - name: ES_PASSWORD
#     valueFrom:
#       secretKeyRef:
#         name: elasticsearch-master-credentials
#         key: password

# secretMounts:
#   - name: elasticsearch-master-certs
#     secretName: elasticsearch-master-certs
#     path: /usr/share/logstash/config/certs

persistence:
  enabled: true

service:
  type: ClusterIP
  ports:
    - name: beats
      port: 5044
      protocol: TCP
      targetPort: 5044
    - name: http
      port: 9600
      protocol: TCP
      targetPort: 9600

readinessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 60
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 3
  failureThreshold: 3

livenessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 300
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 3
